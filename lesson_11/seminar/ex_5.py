# ### –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
# üìå–î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# üìå–î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å:
#   —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
# üìå–ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå–°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
# üìå–ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.

class Rectangle:

    def __init__(self, length: int, width: int = None):
        self.length = length
        if width:
            self.width = width
        else:
            self.width = length

    def perimetr(self):
        return (self.length + self.width) * 2

    def square(self):
        return self.length * self.width

    def __add__(self, other):
        return Rectangle(length=self.length + other.length,
                         width=self.width + other.width)

    def __sub__(self, other):
        return Rectangle(length=self.length - other.length,
                         width=self.width - other.width)

    def __eq__(self, other: "Rectangle"):
        return self.square() == other.square()

    def __le_(self, other: "Rectangle"):
        return self.square() <= other.square()

    def __lt_(self, other: "Rectangle"):
        return self.square() < other.square()

    def __ge_(self, other: "Rectangle"):
        return self.square() >= other.square()

    def __gt__(self, other: "Rectangle"):
        return self.square() > other.square()


first = Rectangle(4, 6)
print(f'{first.perimetr() = }, {first.square() = }')

print("---")

second = Rectangle(2)
print(f'{second.perimetr() = }, {second.square() = }')

third = first - second
print(f'{third.perimetr() = }, {third.square() = }')

print(third < first)
print(third >= first)