"""
### –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
üìå–î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–æ–≤.
üìå–î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏ –≤—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö).
üìå–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã —Å–≤–æ–π—Å—Ç–≤.

### –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå–î–æ—Ä–∞–±–æ—Ç–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏ –¥–æ–±–∞–≤–∏–º —ç–∫–æ–Ω–æ–º–∏—é –ø–∞–º—è—Ç–∏
–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–µ–∑ —Å–ª–æ–≤–∞—Ä—è __dict__.

### –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
üìå–ò–∑–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
üìå–ó–∞–º–µ–Ω—è–µ–º –ø–∞—Ä—É –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –Ω–∞ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞.
"""


class Side:
    def __set_name__(self, owner, name):
        self._param_name = "_" + name

    def __get__(self, instance, owner):
        return getattr(instance, self._param_name)

    def __Set__(self, instance, value):
        self.validate(value)
        setattr(instance, self._param_name, value)

    @staticmethod
    def validate(value):
        if value <= 0:
            raise ValueError("–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")


class Rectangle:
    # __slots__ = ("__length", "__width")

    __width = Side()
    __length = Side()

    def __init__(self, length: int, width: int = None):
        self.__length = length
        if width:
            self.__width = width
        else:
            self.__width = length

    def perimetr(self):
        return (self.__length + self.__width) * 2

    def square(self):
        return self.__length * self.__width


if __name__ == "__main__":
    f1 = Rectangle(length=-4, width=-6)
    # f1._Rectangle__length = -2
    f1.width = 4
    f1.width = 4
    print(f1.square())

