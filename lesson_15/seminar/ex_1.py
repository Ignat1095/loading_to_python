"""
### –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
üìå–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å logging –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª.
üìå–ù–∞–ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å.
"""
import logging

logging.basicConfig(filename="log.log",
                    encoding="utf-8",
                    level=logging.ERROR)

# logging.error("–ù–∞ –Ω–æ–ª—å –Ω–µ–ª—å–∑—è")


def div(a, b):
    try:
        # res = a/b
        return a/b
    except ZeroDivisionError:
        logging.error(f"b = {b}")
        return None


if __name__ == "__main__":
    div(2, 0)

# logger = logging.getLogger(__name__)
# logging.basicConfig(format=FORMAT, style="{", level=logging.INFO)

# logger.debug("–û—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ")
# logger.info("")
# logger.warning("")
# logger.error("")
# logger.critical("")
